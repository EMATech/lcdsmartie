RegExp: A regular expression plugin for LCDSmartie


Legal Notice
---

The library "cpp_regex" and this "regexp" plugin are both licensed under the terms of the
GNU Public License version 2 (GPLv2).  You are welcome to use this code for commercial purposes,
as well as modify it and redistribute it, as long as you make the source code freely available
and use this license in any derivative works.  Please see GPLv2.txt for more information.

What's a "regular expression"?
---

Regular expressions are a powerful tool for working with pattern matching that Perl
and Linux programmers use daily.  Thanks to the cpp_regex library
(http://freshmeat.net/projects/cpp_regex/), we are now able to use these in LCDSmartie
for manipulating any text input to fit our display.

Regular expressions (known simply as a "regex") can be quite complicated to learn
initially. To learn how to use these, see (http://www.regular-expressions.info/).
The cpp_regex library (which this is built on) almost fully supports Perl-style regexs.

Keep in mind a few caveats of using regexs:
a) Matches are greedy, meaning that .* will take every character it can while still
satisfying the match.  This may not be what you want!
b) Many common characters, such as ( ) * . ? + \ { } have special meanings.  Most of these
can be "escaped" by preceeding them with a \ character.


Usage:
---

There are currently four functions available to the user, which exercise almost the entire
capability of the cpp_regex library.  All of these functions support the new information mode;
call the dll with "about" as the first parameter and "function" as the second.  This will
display a short explanation of how to use that function.


Function 1 - Match:
---

Usage: $dll(regexp.dll,1,pattern,input)

This allows you to do the obvious thing that regexs are good for: find the first part
of the input string that matches the given pattern.

Example: $dll(regexp.dll,1,t\w*t,this is a test)
Returns: test

Example: $dll(regexp.dll,1,t.*t,this is a test)
Returns: this is a test (probably not what you wanted!)

Example: $dll(regexp.dll,1,\d C,The current temperature in your are is: 43 C)
Returns: 43 C


Function 2 - Split:
---

Usage: $dll(regexp.dll,2,pattern#seperator,input)

This takes chunks of the input line and combines them into a new string containing the given
seperator.  If no seperator is specified, " - " is used.  The "chunks" which are used are the
regex capture groups matched in the pattern.  The simplest way to make one of these is to
surround part of the match (the part that you want) with parentheses ().  The easiest way to
see is with an example.

Example: $dll(regexp.dll,2,Low: (\d C).*High: (\d C),Today's Low: 13 C, Today's High: 18 C.)
Returns: 13 C - 18 C

Example: $dll(regexp.dll,2,(\w*):(?:\w*):\w*:(\w*)# x ,One:Two:Three:Four)
Returns: One x Four (note how a group can be excluded by starting it with "?:")


Function 3 - Replace:
---

Usage: $dll(regexp.dll,3,pattern1#replacement1#pattern2#replacement2...,input)

The best part of regexs--substitution!  Substitutions are done in-order sequentially, so
replacement2 can build on the results of replacement1.  Also, within each pair, groups
can be created and referenced.

Example: $dll(regexp.dll,3,is a test#works#This#It#(works)\.#\1\!,This is a test.)
Returns: It works!


Function 4 - Number of Matches:
---

Usage: $dll(regexp.dll,4,pattern,input)

This functions similarly to function 1, except it returns the number of matches rather than the
matching string itself.  This can be used to make more advanced conditions for actions.
For example, LCDSmartie can only check equality or inequality, but can't do things such as
"contains string x".  Using this, you can check the number of matches, which will indicate
whether it contains that string.

Example: $dll(regexp.dll,4,test,This test is a helluva test.)
Returns: 2

Example: $dll(regexp.dll,4,\d{2}+kbps,Current speed: 132kbps)
Returns: 1

Example: $dll(regexp.dll,4,\d{2}+kbps,Current speed: 1.8kbps)
Returns: 0


Credits
---

The "regexp" plugin was written by James Cooper <jamescooper@shaw.ca>.  The "cpp_regex" was made
by Jeff Stuart <stuart@cs.ucdavis.edu>.  It can be found at (http://freshmeat.net/projects/cpp_regex/).
To report bugs or submit modifications/improvements, please contact James Cooper directly.
Jeff Stuart is not affiliated with this project in any way.

RegExp is designed to work with LCDSmartie 5.3, a powerful program for displaying animated text on
an LCD module under Windows.  Visit (http://lcdsmartie.sourceforge.net/) for more plugins.